{
  "compilerOptions": {
    "baseUrl": ".", // 모듈 해석을 위한 기본 디렉토리
    "paths": {
      "@/*": ["src/*"] // '@/' 경로를 'src/' 디렉토리로 매핑
    },
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo", // TypeScript 빌드 정보 저장할 위치. 빠른 재빌드를 위한 캐시 파일
    "target": "ES2022", // 컴파일 된 JavasScript가 어떤 ECMAScript버전 사용할 지
    "useDefineForClassFields": true, // 클래스 필드를 Object.defineProperty() 대신 직접 할당으로 처리. 최신 JS표준과 일치시키기 위함
    "lib": ["ES2022", "DOM", "DOM.Iterable"], // 사용 가능한 내장 타입 정의들
    "module": "ESNext", // 출력될 모듈 형식(import/export 문법)
    "skipLibCheck": true, // 라이브러리의 타입 정의 파일 검사를 건너뜀 (빌드 속도 향상)

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* 개발용용 */
    "strict": false, // 모든 엄격한 타입 검사 옵션 활성화
    "noUnusedLocals": false, // 미사용 변수 허용
    "noUnusedParameters": false, // 미사용 매개변수 허용
    "erasableSyntaxOnly": true, // 타입 관련 코드만 제거하고 런타임 코드는 보존
    "noFallthroughCasesInSwitch": false, // switch문에서 break 없는 case 금지
    "noUncheckedSideEffectImports": false, // 사이드 이펙트가 있는 import를 명시적으로 체크
    "noEmitOnError": false, // 오류가 있어도 .js 파일은 내보냄
    "incremental": false // (타입 체크를 안 할 거라면 캐시도 불필요)
    // "strict": true, // 모든 엄격한 타입 검사 옵션 활성화
    // "noUnusedLocals": false, // 미사용 변수 허용
    // "noUnusedParameters": false, // 미사용 매개변수 허용
    // "erasableSyntaxOnly": true, // 타입 관련 코드만 제거하고 런타임 코드는 보존
    // "noFallthroughCasesInSwitch": true, // switch문에서 break 없는 case 금지
    // "noUncheckedSideEffectImports": true // 사이드 이펙트가 있는 import를 명시적으로 체크
  },
  "include": ["src"]
}
